divide operator (/) always results in floating point

both single and double quotes result in strings
double quoted strings allow for special escaped characters
\n newline
\t tab
\\
\'
\"
\?
\a
\b backspace
\o octal
\x hexadecimal
\l lower case next character
\u upper case next character
\L lower case until end
\U upper case until end
\E end
\Q
put a \ before all non-alphanumeric characters

string operators
x repeat
. concatenate

$scalar variable
@array
%hash
$var1 = 5.21;
$var2 = 7;
$var3 = "Hello"


$x++ happens after $x is used
$x--
 
++$x happens before $x is used
--$x 

$y = index($x, "e")
$y = index($x, "e", ($y+1))
-1 is when the substring is not found in the string

$sub = substr($x, 6, 4)
starts at index 6 and takes 4 characters onward

get input:
$x = <STDIN>

STDIN standard input
STDOUT standard output
STDERR standard error messages

chomp($x=<>);
if nothing specified between <>, defaults to STDIN
above expression automatically removes the newline character and assigns the input in one line

print automatically goes to STDOUT

srand 34; pseudo random number 
$m = rand; decimal function, 0-1
$m = rand(100) pseudo random number from 0-100